@using Microsoft.AspNetCore.Components.Forms
@using Example.WebComponents.Data

<!-- Topbar Start -->
<div class="container-fluid bg-light text-info ps-5 pe-0 d-none d-lg-block">
    <div class="row gx-0">
        <div class="col-md-6 text-center text-lg-start mb-2 mb-lg-0">
            <div class="d-inline-flex align-items-center">
                <small class="py-2">
                    <i class="oi oi-clock text-dark me-2"></i>Opening Hours: Mon -
                    Sat : 4.00 pm - 9.00 pm, Sunday Closed
                </small>
            </div>
        </div>
        <div class="col-md-6 text-center text-lg-end">
            <div class="position-relative d-inline-flex align-items-center bg-success text-white top-shape px-5 rounded-pill">
                <div class="me-3 pe-3 border-end py-2">
                    <p class="m-0">
                        <i class="oi oi-envelope-open me-2"></i>thedentalhealers@gmail.com
                    </p>
                </div>
                <div class="me-3 pe-3 border-end py-2">
                    <p class="m-0"><i class="oi oi-phone me-2"></i>0336 3809324</p>
                </div>
                <div class="py-2">
                    <p class="m-0"><i class="oi oi-phone me-2"></i>0321 2679957</p>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Topbar End -->
<nav class="navbar navbar-expand-lg bg-transparent navbar-light nav shadow-sm px-3 py-3 sticky-top">
    <div class="container-fluid">
        <a class="navbar-brand m-0" id="Logo"><img src="_content/Example.WebComponents/techlogo.png" alt="Logo" style="width: 200px"  /></a>
        <button class="navbar-toggler @NavButtonCssClass" type="button" data-bs-toggle="collapse" data-bs-target="#navbarCollapse"
                aria-controls="navbarCollapse" aria-label="Toggle navigation" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse @NavBarCssClass bg-transparent text-white" id="navbarCollapse content" @onclick="ToggleNavMenu">
            <ul class="navbar-nav ms-auto py-0">
                <li class="nav-item">
                    <NavLink class="nav-item nav-link text-success" href="/" Match="NavLinkMatch.All">
                        <span class="oi oi-home" aria-hidden="true"></span> Home
                    </NavLink>
                </li>
                <li class="nav-item">
                    <NavLink class="nav-item nav-link text-success" href="counter">
                        <span class="oi oi-monitor" aria-hidden="true"></span> Build your PC
                    </NavLink>
                </li>
                <li class="nav-item">
                    <NavLink class="nav-item nav-link text-success" href="fetchdata">
                        <span class="oi oi-list" aria-hidden="true"></span> Products
                    </NavLink>
                </li>
                <li class="nav-item">
                    <NavLink class="nav-item nav-link text-success" href="test">
                        <span class="oi oi-list-rich" aria-hidden="true"></span> Bundles
                    </NavLink>
                </li>
                <li class="nav-item">
                    <NavLink class="nav-item nav-link text-success" href="fetchdata">
                        <span class="oi oi-action-undo" aria-hidden="true"></span> Returns
                    </NavLink>
                </li>
                <a class="text-decoration-none text-success py-2 px-4 ms-4 shadow rounded-pill" @onclick:preventDefault @onclick="OpenLoginPopup"
                   href="#"><b>Portal</b></a>
            </ul>
        </div>
        <!-- Popup -->
        @if (showLoginPopup)
        {
            <div class="position-fixed top-0 start-50 translate-middle-x ">
                <div class="modal-dialog modal-dialog-centered">
                    <div class="modal-content"> @*Add "login-card" for blur effect*@
                        <div class="modal-header">
                            <h5 class="modal-title">Login</h5>
                            <button type="button" class="btn-close" @onclick="CloseLoginPopup"></button>
                        </div>
                        <div class="modal-body">
                            <EditForm Model="@loginModel" OnValidSubmit="HandleLogin">
                                <div class="mb-3">
                                    <label for="usernameInput" class="form-label text-black">Username</label>
                                    <InputText id="usernameInput" class="form-control" @bind-Value="loginModel.Username" />
                                </div>
                                <div class="mb-3">
                                    <label for="passwordInput" class="form-label text-black">Password</label>
                                    <InputText id="passwordInput" type="password" class="form-control" @bind-Value="loginModel.Password" />
                                </div>
                                <button type="submit" class="text-decoration-none bg-light bg-opacity-50 font-weight-bold text-success py-2 px-4 shadow rounded-pill" @onclick="NavigateToPage">Login</button>
                            </EditForm>
                        </div>
                    </div>
                </div>
            </div>
        }
        <!-- End Popup -->
    </div>
</nav>

@code {
    private bool collapseNavMenu = true;
    private string? NavBarCssClass => collapseNavMenu ? null : "show";
    private string? NavButtonCssClass => collapseNavMenu ? "collapsed" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private bool showLoginPopup = false;
    private LoginModel loginModel = new LoginModel();

    private void OpenLoginPopup()
    {
        showLoginPopup = true;
    }

    private void CloseLoginPopup()
    {
        showLoginPopup = false;
    }

    private void HandleLogin()
    {
        // Handle the login logic here
        // You can access the loginModel.Username and loginModel.Password properties
        // to perform authentication or any other necessary actions
        // After handling the login, you can close the popup using CloseLoginPopup()
    }
    [Inject]
    private NavigationManager NavigationManager { get; set; }

    private void NavigateToPage()
    {
        NavigationManager.NavigateTo("/counter");
    }
}
